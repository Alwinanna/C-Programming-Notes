====================================================
            üéì LECTURE 007 ‚Äì CONSTANTS IN C PROGRAMMING
====================================================

üìå WHAT IS A CONSTANT?

A constant in C is a fixed value that does NOT change during the execution of a program.

BENEFITS:
- Makes the code easier to understand
- Prevents accidental value changes
- Improves safety and readability

----------------------------------------------------

‚úÖ TYPES OF CONSTANTS IN C:

1. Numeric Constants
2. Character Constants

----------------------------------------------------

üî¢ 1. NUMERIC CONSTANTS

a) INTEGER CONSTANTS
- Whole numbers without decimals.
- Can be in Decimal, Octal, or Hexadecimal.

| TYPE         | FORMAT              | EXAMPLES         |
|--------------|---------------------|------------------|
| Decimal      | Digits 0‚Äì9          | 10, -5           |
| Octal        | Starts with 0       | 012, 075         |
| Hexadecimal  | Starts with 0x      | 0xA, 0xFF        |

b) FLOATING-POINT CONSTANTS (REAL CONSTANTS)
- Have a decimal point or use exponential (scientific) notation.

Examples:
  3.14        ‚Üí A float value
  -0.01       ‚Üí A negative float
  6.022e23    ‚Üí Scientific notation (6.022 √ó 10^23)

----------------------------------------------------

üî§ 2. CHARACTER CONSTANTS

a) SINGLE CHARACTER CONSTANTS
- Enclosed in single quotes:  'A', '5', '$'

b) STRING CONSTANTS
- Enclosed in double quotes:  "Hello", "123", "C Language"

----------------------------------------------------

üìä SUMMARY TABLE:

| TYPE                  | EXAMPLE   | DESCRIPTION                 |
|-----------------------|-----------|-----------------------------|
| Integer (Decimal)     | 25        | Base 10                     |
| Integer (Octal)       | 031       | Starts with 0               |
| Integer (Hexadecimal) | 0x2F      | Starts with 0x              |
| Floating Point        | 3.14      | With decimal/exponent       |
| Single Character      | 'A'       | One character, single quotes|
| String Constant       | "Hello"   | Multiple characters, quotes |

----------------------------------------------------

üö´ RULES FOR WRITING CONSTANTS (with VALIDITY):

| EXAMPLE   | VALID? | REASON                                       |
|-----------|--------|----------------------------------------------|
| 012       | YES    | Valid octal (starts with 0)                  |
| 123       | YES    | Valid decimal                                |
| 0xAF      | YES    | Valid hexadecimal (starts with 0x)           |
| 25,000    | NO     | ‚ùå Comma not allowed                         |
| 12 34     | NO     | ‚ùå Space not allowed                         |
| 0x        | NO     | ‚ùå Incomplete hexadecimal                    |
| #123      | NO     | ‚ùå Invalid character for constants           |

----------------------------------------------------

‚úÖ CORRECT EXAMPLES:

int a = 123;       // Decimal constant  
int b = 012;       // Octal ( = 10 in decimal)  
int c = 0xAF;      // Hexadecimal ( = 175 in decimal)  

‚ùå INCORRECT EXAMPLES:

int x = 25,000;    // ‚ùå Comma not allowed  
int y = 12 34;     // ‚ùå Space not allowed  
int z = 0x;        // ‚ùå Incomplete hexadecimal  
int w = #123;      // ‚ùå '#' is not valid here  

----------------------------------------------------

üìå DECLARING CONSTANTS IN C:

Using Preprocessor Macro:
    #define MAX 50        ‚Üí MAX becomes constant value 50

Using const Keyword:
    const int a = 10;     ‚Üí 'a' is a constant integer (value can't change)

----------------------------------------------------

‚ö†Ô∏è CHARACTER CONSTANT EXERCISES:

| EXAMPLE | VALID? | REASON                                 |
|---------|--------|----------------------------------------|
| 'A'     | YES    | Single character in single quotes       |
| '9'     | YES    | Digit as character                      |
| '@'     | YES    | Special characters allowed              |
| "A"     | NO     | ‚ùå Double quotes = string, not character|
| ''      | NO     | ‚ùå Empty character constant              |
| 'AB'    | NO     | ‚ùå Too many characters                   |
| ' '     | YES    | Valid: space character                  |

----------------------------------------------------

üíª SAMPLE CODE: USING CHARACTER CONSTANTS

#include <stdio.h>

int main() {
    const char grade = 'A';      // Valid character
    const char digit = '5';      // Also valid
    const char space = ' ';      // Space character

    printf("Grade: %c\n", grade);
    printf("Digit: %c\n", digit);
    printf("Space: [%c]\n", space);  // Will show space

    return 0;
}

----------------------------------------------------

‚úÖ TIP:
  'a'  ‚Üí Single character constant  
  "a"  ‚Üí String constant (character array)

====================================================
